syntax = "proto3";

package client_service;

// 导入谷歌官方通用类型：空消息、字段掩码、时间戳
import "google/protobuf/field_mask.proto";

// ===== 枚举定义：替代裸int32，避免魔术数字，提升代码可读性和可维护性 =====

/// 好友添加策略枚举
/// 用于控制当前用户如何被其他用户添加为好友
enum AddFriendPolicy {
  // 未指定（默认值，服务端可根据业务逻辑处理为默认策略）
  ADD_FRIEND_UNSPECIFIED = 0;
  // 允许任何人添加为好友，无需验证
  ANYONE = 1;
  // 需要验证，需本人同意后才能成为好友
  REQUIRE_VERIFY = 2;
  // 仅允许通过手机号添加（需用户已绑定手机号）
  PHONE_ONLY = 3;
}

/// 性别枚举
enum Gender {
  // 未指定（默认值）
  GENDER_UNSPECIFIED = 0;
  // 男性
  MALE = 1;
  // 女性
  FEMALE = 2;
  // 保密（特殊值，区别于未指定）
  SECRET = 9;
}

/// 用户类型枚举
/// 用于区分不同类型的用户，便于业务逻辑处理（如权限控制、功能限制等）
enum UserType {
  // 未指定（默认值）
  USER_TYPE_UNSPECIFIED = 0;
  // 普通用户（常规注册用户）
  NORMAL = 1;
  // 测试用户（用于内部测试，可能有特殊权限或限制）
  TEST = 2;
  // 机器人用户（系统自动操作的账号）
  BOT = 3;
}

/// 用于用户信息的查询、展示等场景
message ClientEntity {
  // 用户唯一标识（主键），由服务端生成
  int64 id = 1;
  // 密码，建议存储哈希值而非明文
  string password = 2;
  // 用户名，建议长度<=64字符
  string name = 3;
  // 邮箱地址（可选），建议服务端进行规范化处理（小写+punycode编码）
  optional string email = 4;
  // 手机号（可选），建议服务端按E.164标准规范化（如+8613800138000）
  optional string phone = 5;
  // 语言偏好，遵循BCP-47标准（如"zh-CN"表示简体中文，"en-US"表示美式英语）
  optional string language = 6;

  // 头像URL，建议长度<=256字符
  string avatar = 7;
  // 好友添加策略，默认值由服务端指定
  AddFriendPolicy allow_add_friend = 8;
  // 性别，默认未指定
  Gender gender = 9;
  // 用户类型，默认普通用户
  UserType user_type = 10;

  // 扩展个人资料字段（低频使用），用于存储自定义信息（如个性签名、地址等）
  map<string, string> profile_fields = 11;

  // 创建时间戳（毫秒级），由服务端生成
  int64 create_time = 12;
  // 最后更新时间戳（毫秒级），由服务端更新
  int64 update_time = 13;

  // 版本号，用于乐观锁控制，防止并发更新冲突
  int32 version = 14;

  // 预留字段号范围，避免未来扩展时字段号冲突
  reserved 100 to 119;
}
message FindClientDto{
  optional ClientEntity client = 1;
}

// ===== 接口请求/响应定义 =====

/// 用户注册请求
/// 用于新用户账号创建
message RegisterUserReq {
  // 用户名（必填），服务端需校验唯一性和合法性
  string name = 1;
  // 密码明文（仅在请求中传输，服务端接收后需立即进行哈希处理，不存储明文）
  string password = 2;
  // 邮箱（可选），若提供需校验格式
  optional string email = 4;
  // 手机号（可选），若提供需校验格式
  optional string phone = 5;
  // 语言偏好（可选）
  optional string language = 6;
  // 头像URL（必填，可提供默认值）
  string avatar = 7;
  // 好友添加策略（必填，使用枚举确保合法性）
  AddFriendPolicy allow_add_friend = 8;
  // 性别（可选，默认未指定）
  Gender gender = 9;
  // 用户类型（可选，默认普通用户，服务端可根据业务限制类型）
  UserType user_type = 10;
  // 扩展资料字段（可选）
  map<string, string> profile_fields = 11;
}

/// 修改密码请求
/// 用于用户更新登录密码
message ChangePasswordReq {
  // 用户ID（必填），标识要修改密码的用户
  int64 id = 1;
  // 旧密码（可选），走短信/邮箱验证流程时可忽略
  optional string old_password = 2;
  // 新密码（必填），服务端需校验强度（如长度、复杂度）并进行哈希处理
  string new_password = 3;
  // 验证票据（可选），用于短信/邮箱验证或二次校验场景
  optional string verify_token = 4;
}

/// 更换手机号请求
/// 支持更新、清除手机号（通过字段存在性和值控制）
message ChangePhoneReq {
  // 用户ID（必填）
  int64 id = 1;
  // 新手机号（可选）：
  optional string new_phone = 2;
                                            // - 有值（非空）→ 更新为该手机号
                                            // - 有值且为空串 → 清除当前手机号
                                            // - 未出现该字段 → 不修改手机号
  // 验证票据（必填，手机号修改需严格验证）
  optional string verify_token = 3;
}

/// 更换邮箱请求
/// 逻辑同更换手机号
message ChangeEmailReq {
  // 用户ID（必填）
  int64 id = 1;
  // 新邮箱（可选）：
  optional string new_email = 2;
                                            // - 有值（非空）→ 更新为该邮箱
                                            // - 有值且为空串 → 清除当前邮箱
                                            // - 未出现该字段 → 不修改邮箱
  // 验证票据（必填，邮箱修改需严格验证）
  optional string verify_token = 3;
}

/// 通用用户信息更新请求
/// 支持部分字段更新，通过字段掩码控制更新范围
message UpdateClientReq {
  // 要更新的字段集合（至少包含id，建议包含version做乐观锁）
  ClientEntity patch = 1;
                                            // 仅包含需要更新的字段，未包含的字段不做修改
  // 字段掩码，指定需要更新的字段（例："name,language,avatar,profile_fields"）
  google.protobuf.FieldMask update_mask = 2;
                                            // 仅patch中出现且被mask指定的字段才会更新
                                            // 若字段为optional且明确设为null/空串，按业务约定处理（如清除/置空）
}

/// 查询用户信息请求
message GetClientReq {
  // 用户ID（必填），查询指定用户的信息
  int64 id = 1;
}

/// 变更操作响应
/// 用于不需要返回详细实体的变更操作（如修改密码）
message ChangeResponse {
  // 操作是否成功
  bool success = 1;
}
message FindByContentReq {
  string content = 1;
}

// ===== 服务定义 =====

/// 用户实体服务
/// 提供用户注册、信息查询、修改等核心功能
service ClientRpcService {
  // 通过邮箱查询用户
  rpc findByEmail(FindByContentReq) returns (FindClientDto);
  // 通过手机查询用户
   rpc findByPhone(FindByContentReq) returns (FindClientDto);
  // 通过用户名查询用户
  rpc findByName(FindByContentReq) returns (FindClientDto);
  // 用户注册：创建新用户账号，返回创建后的用户实体（不含密码）
  rpc Register       (RegisterUserReq) returns (ClientEntity);
  // 修改密码：更新用户登录密码，返回操作结果
  rpc ChangePassword (ChangePasswordReq) returns (ChangeResponse);
  // 更换手机号：更新或清除用户手机号，返回更新后的用户实体
  rpc ChangePhone    (ChangePhoneReq) returns (ClientEntity);
  // 更换邮箱：更新或清除用户邮箱，返回更新后的用户实体
  rpc ChangeEmail    (ChangeEmailReq) returns (ClientEntity);
  // 通用信息更新：支持部分字段更新，返回更新后的用户实体
  rpc UpdateClient   (UpdateClientReq) returns (ClientEntity);
  // 查询用户信息：根据用户ID查询详细信息
  rpc GetClient      (GetClientReq) returns (ClientEntity);
}