syntax = "proto3";

package api;

// 构建注册验证码（手机/邮箱等渠道）。
message BuildRegisterCodeRequest {
  // 唯一用户名，例如手机号、邮箱或登录名。
  string name = 1;
  // 注册时提交的明文密码。
  string password = 2;
  // 注册介质，对应服务层的 `UserRegType` 枚举。
  int32 reg_type = 3;
  // 发送目标，如手机号或邮箱地址。
  string target = 4;
}

// 注册验证码接口返回值。
message BuildRegisterCodeResponse {
  // 注册流程 ID；当 reg_type=LoginName 时为空。
  string reg_id = 1;
  // 登录名注册时返回新用户 UID（同步创建路径）。
  int64 uid = 2;
}

// 用户输入验证码时提交的参数。
message VerifyRegisterCodeRequest {
  string reg_id = 1;
  string code = 2;
}

// 验证码校验结果。
message VerifyRegisterCodeResponse {
  // 验证是否成功。
  bool ok = 1;
}

// 通用登录请求；`target` 表示登录标识（手机号/邮箱等）。
message LoginRequest {
  // 登录渠道类型，对应 `UserLogType`。
  int32 login_type = 1;
  string password = 2;
  string target = 3;
  // 设备类型，对应 hot_online 的 DeviceType 枚举。
  int32 device_type = 4;
  // 设备唯一标识，用于多端登录策略。
  string device_id = 5;
}

// 登录成功后返回的会话信息。
message LoginResponse {
  // 会话 token，下游服务与 socket 握手使用。
  string token = 1;
  // token 失效时间（毫秒时间戳）。
  uint64 expires_at = 2;
  // 按 arb 哈希得到的 socket 入口地址（host:port）。无节点时为空字符串。
  string socket_addr = 3;
  // Socket 对外暴露的主机名/IP。
  string socket_host = 4;
  // Socket 对外暴露的端口（0 表示使用默认代理端口）。
  uint32 socket_port = 5;
}

// 使用当前会话修改密码。
message ChangePasswordRequest {
  string session_token = 1;
  string old_password = 2;
  string new_password = 3;
}

// 修改密码操作的反馈。
message ChangePasswordResponse {
  bool ok = 1;
}

// 修改绑定手机号；可选旧验证码用于双重验证。
message ChangePhoneRequest {
  string session_token = 1;
  string new_phone = 2;
  optional string old_phone_code = 3;
  string new_phone_code = 4;
}

// 修改手机号操作的反馈。
message ChangePhoneResponse {
  bool ok = 1;
  string phone = 2;
}

// 修改绑定邮箱。
message ChangeEmailRequest {
  string session_token = 1;
  string new_email = 2;
  optional string old_email_code = 3;
  string new_email_code = 4;
}

// 修改邮箱操作的反馈。
message ChangeEmailResponse {
  bool ok = 1;
  string email = 2;
}

// 更新基础资料字段。
message UpdateProfileRequest {
  string session_token = 1;
  optional string avatar = 2;
  optional int32 gender = 3;
}

// 更新资料操作的反馈。
message UpdateProfileResponse {
  bool ok = 1;
}

message FriendSummary {
  int64 friend_id = 1;
  string nickname = 2;
  string avatar = 3;
  optional string remark = 4;
}

message GetFriendListRequest {
  string session_token = 1;
}

message GetFriendListResponse {
  repeated FriendSummary friends = 1;
}

message GroupMemberSummary {
  int64 group_id = 1;
  int64 member_id = 2;
  string nickname = 3;
  string avatar = 4;
  int32 role = 5;
}

message GetGroupMembersRequest {
  string session_token = 1;
  int64 group_id = 2;
}

message GetGroupMembersResponse {
  repeated GroupMemberSummary members = 1;
}

message GetGroupMemberDetailRequest {
  string session_token = 1;
  int64 group_id = 2;
  int64 member_id = 3;
}

message GetGroupMemberDetailResponse {
  GroupMemberSummary member = 1;
  bool is_friend = 2;
}

// 对外 API 服务，兼顾注册、登录与账号管理接口。
service ApiService {
  // 生成注册验证码：手机/邮箱注册场景需调用。
  rpc BuildRegisterCode(BuildRegisterCodeRequest) returns (BuildRegisterCodeResponse);
  // 校验注册验证码：用户输入验证码后触发。
  rpc VerifyRegisterCode(VerifyRegisterCodeRequest) returns (VerifyRegisterCodeResponse);
  // 执行登录流程：校验账号密码并下发会话信息。
  rpc Login(LoginRequest) returns (LoginResponse);
  // 修改当前账号密码。
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);
  // 替换绑定手机号。
  rpc ChangePhone(ChangePhoneRequest) returns (ChangePhoneResponse);
  // 替换绑定邮箱。
  rpc ChangeEmail(ChangeEmailRequest) returns (ChangeEmailResponse);
  // 更新昵称、头像等基础资料。
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);
  // 获取当前用户好友列表
  rpc GetFriendList(GetFriendListRequest) returns (GetFriendListResponse);
  // 获取指定群的成员列表
  rpc GetGroupMembers(GetGroupMembersRequest) returns (GetGroupMembersResponse);
  // 获取群成员详情，同时返回是否为好友
  rpc GetGroupMemberDetail(GetGroupMemberDetailRequest) returns (GetGroupMemberDetailResponse);
}
