syntax = "proto3";

package client_service;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// ===== 枚举：替代裸 int32，避免魔术数字 =====
enum AddFriendPolicy {
  ADD_FRIEND_UNSPECIFIED = 0;
  ANYONE = 1;
  REQUIRE_VERIFY = 2;
  PHONE_ONLY = 3;
}

enum Gender {
  GENDER_UNSPECIFIED = 0;
  MALE = 1;
  FEMALE = 2;
  SECRET = 9;
}

enum UserType {
  USER_TYPE_UNSPECIFIED = 0;
  NORMAL = 1;
  TEST = 2;
  BOT = 3;
}

// ===== 传输用的用户实体（不包含密码/哈希）=====
message ClientEntity {
  int64 id = 1;                         // 主键
  string name = 2;                      // 建议<=64
  optional string email = 3;            // 建议服务端规范化：lower+punycode
  optional string phone = 4;            // 建议服务端规范化：E.164
  optional string language = 5;         // BCP-47，如 "zh-CN"/"en-US"

  string avatar = 6;                    // URL 建议<=256
  AddFriendPolicy allow_add_friend = 7;
  Gender gender = 8;
  UserType user_type = 9;

  map<string, string> profile_fields = 10; // 扩展键值（低频）

  int64 create_time = 11;       // 创建时间
  int64 update_time = 12;       // 更新时间

  int32 version = 13;
  // 预留字段号，避免将来冲突
  reserved 100 to 119;
  reserved "password";
}

// ===== 注册 =====
message RegisterUserReq {
  string name = 1;                          // 必填
  string password = 2;                      // 明文（仅入参，服务端立刻哈希）
  optional string email = 4;
  optional string phone = 5;
  optional string language = 6;
  string avatar = 7;
  AddFriendPolicy allow_add_friend = 8;     // 统一用枚举
  Gender gender = 9;
  UserType user_type = 10;
  map<string, string> profile_fields = 11;
}

// ===== 修改密码 =====
message ChangePasswordReq {
  int64 id = 1;
  optional string old_password = 2;         // 走短信/邮箱验证时可为空
  string new_password = 3;                  // 服务端校验强度并哈希
  optional string verify_token = 4;         // 短信/邮箱/二次校验票据
}

// ===== 换手机（传 presence：有值→更新；有值且为空串→清除；未出现→不变）=====
message ChangePhoneReq {
  int64 id = 1;
  optional string new_phone = 2;            // optional 支持“存在性”，空串表示清除
  optional string verify_token = 3;
}

// ===== 换邮箱（同上）=====
message ChangeEmailReq {
  int64 id = 1;
  optional string new_email = 2;            // 空串表示清除
  optional string verify_token = 3;
}

// ===== 通用更新（字段掩码）=====
// 仅 patch 中出现且被 update_mask 指定的字段才会更新；若字段为 optional 且明确设为 null/空串，按业务约定处理“清除/置空”。
message UpdateClientReq {
  ClientEntity patch = 1;                     // 至少包含 id（和 version，若做乐观锁）
  google.protobuf.FieldMask update_mask = 2;  // 例: "name,language,avatar,profile_fields"
}

// ===== 查询 =====
message GetClientReq { int64 id = 1; }
message ChangeResponse {
  bool success = 1;
}
// ===== 服务定义 =====
service ClientEntityService {
  rpc Register       (RegisterUserReq) returns (ClientEntity);
  rpc ChangePassword (ChangePasswordReq) returns (ChangeResponse);
  rpc ChangePhone    (ChangePhoneReq) returns (ClientEntity);
  rpc ChangeEmail    (ChangeEmailReq) returns (ClientEntity);
  rpc UpdateClient   (UpdateClientReq) returns (ClientEntity);
  rpc GetClient      (GetClientReq) returns (ClientEntity);
}
