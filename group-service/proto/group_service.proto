syntax = "proto3";

// 包名（生成代码时会对应到命名空间）
package group_service;

// ---------------------- 基础类型与模型 ----------------------

// 群成员角色类型（与数据库/内存中的角色编码对齐）
enum GroupRoleType {
  Owner  = 0; // 群主
  Admin  = 1; // 管理员
  Member = 2; // 普通成员
}

// 群成员引用信息
message MemberRef {
  int64 id = 1;               // 成员用户ID
  optional string alias = 2;  // 群内别名（可选，不传或空表示无别名）
  int32 role = 3;             // 成员角色（0=Owner, 1=Admin, 2=Member）
}

// ---------------------- 成员增删改 ----------------------

// 插入单个成员
message InsertReq {
  int64 group_id = 1;   // 群组ID
  MemberRef member = 2; // 要添加的成员信息（可携带 alias）
}
message InsertResp {}

// 批量插入成员
message InsertManyReq {
  int64 group_id = 1;              // 群组ID
  repeated MemberRef members = 2;  // 成员列表（成员可各自携带 alias）
}
message InsertManyResp {}

// 移除成员
message RemoveReq {
  int64 group_id = 1; // 群组ID
  int64 user_id = 2;  // 要移除的用户ID
}
message RemoveResp {
  bool removed = 1; // 是否实际删除成功（false 表示成员不存在）
}

// 修改成员角色
message ChangeRoleReq {
  int64 group_id = 1; // 群组ID
  int64 user_id = 2;  // 用户ID
  int32 role = 3;     // 新角色（0/1/2）
}
message ChangeRoleResp {}

// 修改成员别名（新增）
message ChangeAliasReq {
  int64 group_id = 1;          // 群组ID
  int64 user_id = 2;           // 用户ID
  optional string alias = 3;   // 新别名（为空或不传表示清空别名）
}
message ChangeAliasResp {}

// ---------------------- 成员查询 ----------------------

// 分页获取群成员
message GetPageReq {
  int64 group_id = 1;  // 群组ID
  uint64 page = 2;     // 页码（从 0 或 1 开始，取决于实现）
  uint64 page_size = 3;// 每页成员数量
}
message GetPageResp {
  repeated MemberRef members = 1; // 成员列表（包含 alias）
}

// 获取群内全部成员
message GetAllReq {
  int64 group_id = 1; // 群组ID
}
message GetAllResp {
  repeated MemberRef members = 1; // 成员列表（包含 alias）
}

// 获取群成员数量
message CountReq {
  int64 group_id = 1; // 群组ID
}
message CountResp {
  uint64 count = 1; // 成员总数
}

// ---------------------- 跨群查询 ----------------------

// 获取用户所在的所有群组
message UserGroupsReq {
  int64 user_id = 1; // 用户ID
}
message UserGroupsResp {
  repeated int64 group_ids = 1; // 群组ID列表
}

// 获取所有群组ID（全局）
message AllKeysReq {}
message AllKeysResp {
  repeated int64 group_ids = 1; // 群组ID列表
}

// 按分片索引获取群组ID
message AllKeysByShardReq {
  uint64 shard_idx = 1; // 分片下标（与服务器分片数匹配）
}
message AllKeysByShardResp {
  repeated int64 group_ids = 1; // 群组ID列表
}

// ---------------------- 群管理 ----------------------

// 清空群成员
message ClearReq {
  int64 group_id = 1; // 群组ID
}
message ClearResp {}

// ---------------------- 服务定义 ----------------------

// 群组服务接口定义：提供群成员增删改查、跨群查询、分片管理等能力
service GroupService {
  // 添加单个成员
  rpc Insert(InsertReq) returns (InsertResp);

  // 批量添加成员
  rpc InsertMany(InsertManyReq) returns (InsertManyResp);

  // 移除成员
  rpc Remove(RemoveReq) returns (RemoveResp);

  // 修改成员角色
  rpc ChangeRole(ChangeRoleReq) returns (ChangeRoleResp);

  // 修改成员别名（新增）
  rpc ChangeAlias(ChangeAliasReq) returns (ChangeAliasResp);

  // 分页获取群成员
  rpc GetPage(GetPageReq) returns (GetPageResp);

  // 获取群全部成员
  rpc GetAll(GetAllReq) returns (GetAllResp);

  // 获取群成员数量
  rpc Count(CountReq) returns (CountResp);

  // 获取用户所在的所有群组
  rpc UserGroups(UserGroupsReq) returns (UserGroupsResp);

  // 获取所有群组ID（全局）
  rpc AllKeys(AllKeysReq) returns (AllKeysResp);

  // 按分片索引获取群组ID
  rpc AllKeysByShard(AllKeysByShardReq) returns (AllKeysByShardResp);

  // 清空群成员
  rpc Clear(ClearReq) returns (ClearResp);
}
